{{>navbar}}

<main class="mt-[80px]">
	<a onclick="window.history.back()">
		<button class="go-back">
			<i class="material-icons">arrow_back</i>
		</button>
	</a>

	{{!-- Breadcrumbs --}}
	<div class="inline-flex items-center justify-center mb-4 ml-2 place-items-center text-slate-200">
		<a href="/clientes/{{clientId}}">
			<button class="flex items-center">
				<span class="button-icon-container">
					<i class="material-icons icon-clients center" style="display: inline; margin-right: .5rem;">person</i>
				</span>
				{{clientName}}
			</button>
		</a>
		<span class="flex items-center px-2 "><i class="material-icons ">chevron_right</i></span>
		<button class="flex items-center text-slate-200 cursor-text ">
			<span class="button-icon-container">
				<i class="material-icons icon-clients center" style="display: inline; margin-right: .5rem;">ac_unit</i>
			</span>
			Nuevo equipo
		</button>
	</div>

	<i class="material-icons icon-clients center"
		style="font-size: 70px; display: block; margin-bottom: .2rem;">ac_unit</i>
	<h1 class="title">Nuevo equipo</h1>
	<form class="form-container" action="/equipos" method="post" id="form-new-refunit">
		<div class="grid gap-8 mb-4 sm:grid-cols-2 lg:grid-cols-3">
			<div class="form-field">
				<label for="client">Nombre de Cliente</label>
				<input type="text" name="clientName" value="{{clientName}}" style="text-transform: uppercase;" readonly />
			</div>
			<div class="form-field">
				<label for="client">ID Cliente</label>
				<input type="text" id="client-id" name="client" value="{{clientId}}" readonly />
			</div>
			<div class="form-field">
				<label for="name">Nº Serie <span class="text-red-500">*</span></label>
				<input type="text" class="uppercase" pattern="[A-Za-z0-9]+" name="serialNumber" placeholder="0000000000"
					id="serial-number" maxlength="17" required />
			</div>
			<div class="form-field">
				<label for="plate-number">Matrícula <span class="text-yellow-500">*</span></label>
				<input type="text" id="plate-number" name="plate" placeholder="ATP1234" style="text-transform: uppercase;"
					maxlength=12 {{!-- required maxlength="7" pattern="^[A-Za-z]{1,3}[0-9]{1,4}" /> --}} />
			</div>
			<div class="form-field">
				<label for="model">Modelo <span class="text-red-500">*</span></label>
				{{!-- <input type="text" name="model" placeholder="V-500" /> --}}
				<select name="model" id="select-model" required>
					<option value="" disabled selected>Seleccionar</option>
					<option value="C-150">C-150</option>
					<option value="C-250">C-250</option>
					<option value="C-350">C-350</option>
					<option value="C-150 MAX">C-150 MAX</option>
					<option value="C-250 MAX">C-250 MAX</option>
					<option value="C-350 MAX">C-350 MAX</option>
					<option value="C-450 MAX">C-450 MAX</option>
					<option value="C-550 MAX">C-550 MAX</option>
					<option value="C-650 MAX">C-650 MAX</option>
					<option value="C-750 MAX">C-750 MAX</option>
					<option value="RV-200">RV-200</option>
					<option value="RV-380">RV-380</option>
					<option value="RV-380">RV-580</option>
					<option value="V-200">V-200</option>
					<option value="V-300">V-300</option>
					<option value="V-500">V-500</option>
					<option value="V-600">V-600</option>
					<option value="V-800">V-800</option>
					<option value="V-400x">V-400x</option>
					<option value="V-500x">V-500x</option>
					<option value="EV-500">EV-500</option>
					<option value="T-600">T-600</option>
					<option value="T-800">T-800</option>
					<option value="T-1200">T-1200</option>
					<option value="SLXi400">SLXi 400</option>
					<option value="SLII">SLII</option>
					<option value="SLIII">SLIII</option>
					<option value="A500">Advancer A500</option>
					<option value="C-600">Precedent C-600</option>
					<option value="SB-210">SB-210</option>
					<option value="SB-310">SB-310</option>
					<option value="SR-2">SR-2</option>
					<option value="SB-3">SB-3</option>
					<option value="RD-II SR">RD-II SR</option>
					<option value="COLD CAR">COLD CAR</option>
					<option value="FIBRASIL">FIBRASIL</option>
					{{!-- 5 dígitos --}}
					<option value="RECROSUL">RECROSUL</option>
					<option value="Otro">Otro (avisar a mauro)</option>
				</select>
			</div>
			<div class="form-field">
				<label for="soldByReci">Venta RECI <span class="text-red-500">*</span></label>
				<select name="soldByReci" id="soldByReciSelect" required>
					<option value="" disabled selected>Seleccionar</option>
					<option value="true">Si</option>
					<option value="false">No</option>
				</select>
			</div>
			<div class="form-field">
				<label for="hours">Fecha límite de garantía: <span class="text-red-500">*</span></label>
				<input type="date" id="warranty-date" name="warrantyDate" placeholder="" />
			</div>
		</div>

		<div class="w-full flex justify-end">
			<button class="button-success" role="submit" id="submit-button">Guardar</button>
		</div>
	</form>
</main>

{{#each scripts}}
<script src="{{script}}"></script>
{{/each}}

<script>
	// special characters not allowed on serial number
	document.getElementById('serial-number').addEventListener('keypress', function (e) {
		const matches = /[A-Za-z0-9]/.test(String.fromCharCode(e.which));
		if (!matches) {
			e.preventDefault();
		}
	});

	// special characters not allowed on license plate
	document.getElementById('plate-number').addEventListener('keypress', function (e) {
		const matches = /[A-Za-z0-9]/.test(String.fromCharCode(e.which));
		if (!matches) {
			e.preventDefault();
		}
	});

	serialNumberInput.addEventListener('input', function () {
		const serialNumberRegex = /^[A-Za-z]{3}\d{7}$/;

		if (serialNumberRegex.test(serialNumberInput.value)) {
			serialNumberInput.classList.add('verifiedSerial');
		} else {
			serialNumberInput.classList.remove('verifiedSerial');
		}
	});

	const isPlateNumber = (number) => {
		const plateNumberRegex = /^[A-Za-z]{3}\d{4}$/;
		const brasilPlateNumberRegex = /^[A-Za-z]{1}\d{6}$/;
		let matches =
			plateNumberRegex.test(plateNumberInput.value) || brasilPlateNumberRegex.test(plateNumberInput.value);
		return matches
	}

	// input green if plate matches format
	const plateNumberInput = document.getElementById('plate-number');
	plateNumberInput.addEventListener('input', function () {
		const matches = isPlateNumber(plateNumberInput.value);
		if (matches) {
			plateNumberInput.classList.add('verifiedSerial');
		} else {
			plateNumberInput.classList.remove('verifiedSerial');
		}
	});

	// set warranty date to following year when clicked
	let date = new Date();
	date.setFullYear(date.getFullYear() + 1);

	let day = ("0" + date.getDate()).slice(-2);
	let month = ("0" + (date.getMonth() + 1)).slice(-2);

	let nextYearDate = date.getFullYear() + "-" + (month) + "-" + (day);

	document.getElementById('warranty-date').addEventListener('click', function () {
		document.getElementById('warranty-date').value = nextYearDate;
	});
</script>